name: Generate Samba Debian Package

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches: ["main"]
    
    tags:
      - deb*
      - all*


env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: generate_samba_deb

jobs:
  # Run tests.
  prepare:
    runs-on: debian-10

    steps:
      - uses: actions/checkout@v1

      - name: Run tests
        run: |
          if ! [ -f Dockerfile ]; then
            docker 
          fi
    
  build:
    needs: prepare

    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v1
        
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d-%H%M%S')"
        
      - name: Build Debian Package
        id: build_package
        run: |
          mkdir opt
          tar -zxvf samba_source/*.tar.gz
          cp -r opt/samba4/* src/
          mv build/debian src/DEBIAN
          cd src
          touch DEBIAN/md5sums
          touch DEBIAN/control
          find ./ -type f -exec md5sum {} \; > DEBIAN/md5sums
          cat DEBIAN/control
          size=$(du -s ../src | cut -f 1)
          echo "Package: sambahvl
          Version: ${{steps.date.outputs.date}}
          Installed-Size: $size
          Maintainer: Duygu Ã–lmez <zeynepduyguolmez@gmail.com>, Zeki Ahmet Bayar <zekiahmetbayar1@gmail.com>
          Section: admin
          Depends: libcups2, libjansson4, libpython3.7, libgpgme11, ntpdate, krb5-user, python3-dnspython, openssh-server, ntp, python3-markdown, liblmdb0, openssl, libunwind-dev, libglib2.0-dev
          Date : $GITHUB_RUN_ID
          Architecture: amd64
          Description: Deb packages for Samba
            Deb packages for Samba
          " > DEBIAN/control
          cat DEBIAN/control
          chmod 755 DEBIAN/postinst
          cd ../
          . build/version
          package_name="debian-samba-$ver-"
          mv src "$package_name"${{steps.date.outputs.date}}
          dpkg-deb -Zgzip --build "$package_name"${{steps.date.outputs.date}}
          echo ::set-output name=path::$(pwd)/"$package_name"${{steps.date.outputs.date}}.deb
          echo ::set-output name=filename::"$package_name"${{steps.date.outputs.date}}.deb
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{steps.build_package.outputs.filename}}
          release_name: ${{steps.build_package.outputs.filename}}
          body: |
            Changes in this Release
            - Will be add.
          draft: false
          prerelease: false

      - name: Upload the Debian package to Release Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.build_package.outputs.path }}
          asset_name: ${{ steps.build_package.outputs.filename }}
          asset_content_type: application/vnd.debian.binary-package
